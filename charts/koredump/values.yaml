# Copyright (C) 2022 Nokia
# Licensed under the MIT License
# SPDX-License-Identifier: MIT

replicaCount: 1

image:
  repository: ghcr.io/nokia/koredump
  pullPolicy: Always
  # Overrides the image tag whose default is the chart appVersion.
  tag: ""

flaskDebug: 0
imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

filter: {}
  # Filter core files based on kubernetes namespace.
  # If defined, cores are only collected if the namespace name matches the regex.
  #
  # If no filter is defined (default), all cores are collected.
  #
  # namespaceRegex: 'test.*'

# Run and collect core dumps also on control plane nodes.
runOnControlPlaneNodes: true

ports:
  service: 5000
  daemonSet: 5001

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext:
  daemonset:
    readOnlyRootFilesystem: true
    runAsUser: 900
    capabilities:
      drop:
      - ALL
      add:
      - DAC_OVERRIDE
  restApi:
    readOnlyRootFilesystem: true
    runAsUser: 900
  # capabilities:
  #   drop:
  #   - ALL

service:
  type: ClusterIP
  port: 80

ingress:
  enabled: false
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
      - path: /
        backend:
          serviceName: chart-example.local
          servicePort: 80
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources:
  limits:
    cpu: 500m
    memory: 200Mi
  requests:
    cpu: 50m
    memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}
